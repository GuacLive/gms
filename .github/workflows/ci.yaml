name: CI

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ format('{0}-latest', matrix.os) }}

    strategy:
      matrix:
        channel: [stable]
        os: [windows, ubuntu, macos]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.channel }}
          target: ${{ matrix.target }}
          override: true

      - name: Build
        continue-on-error: ${{ matrix.channel != 'stable' }}
        run: cargo build --release --package xiu --bin xiu

      - name: Rename binary
        if: matrix.os != 'windows'
        run: mv target/release/xiu xiu_${{ matrix.os }}

      - name: Rename binary (win)
        if: matrix.os == 'windows'
        run: mv target/release/xiu.exe xiu_${{ matrix.os }}.exe

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.channel == 'stable' }}
        with:
          name: xiu_${{ matrix.os }}
          path: xiu_${{ matrix.os }}*

      - uses: alexellis/upload-assets@0.4.0
        if: startsWith(github.ref, 'refs/tags/') && matrix.channel == 'stable'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["xiu_${{ matrix.os }}*"]'

  docker:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=edge
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64 #linux/arm64/v8,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
